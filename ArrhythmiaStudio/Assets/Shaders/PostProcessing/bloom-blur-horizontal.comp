#version 440

layout(local_size_x = 8, local_size_y = 8) in;

layout(rgba16f, binding = 0) uniform image2D img_output;
layout(location = 0) uniform sampler2D source;

void main() {
	ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);
	ivec2 size = imageSize(img_output);

	vec2 texelSize = 1.0 / vec2(size);
	vec2 uv = pixelCoords / vec2(size) + texelSize * 0.5;

	vec3 sum;
	sum  = texture(source, uv + texelSize * vec2( 4.0, 0.0)).rgb * 0.0162162162;
	sum += texture(source, uv + texelSize * vec2( 3.0, 0.0)).rgb * 0.0540540541;
	sum += texture(source, uv + texelSize * vec2( 2.0, 0.0)).rgb * 0.1216216216;
	sum += texture(source, uv + texelSize * vec2( 1.0, 0.0)).rgb * 0.1945945946;
	sum += texture(source, uv + texelSize * vec2( 0.0     )).rgb * 0.2270270270;
	sum += texture(source, uv + texelSize * vec2(-1.0, 0.0)).rgb * 0.1945945946;
	sum += texture(source, uv + texelSize * vec2(-2.0, 0.0)).rgb * 0.1216216216;
	sum += texture(source, uv + texelSize * vec2(-3.0, 0.0)).rgb * 0.0540540541;
	sum += texture(source, uv + texelSize * vec2(-4.0, 0.0)).rgb * 0.0162162162;

	imageStore(img_output, pixelCoords, vec4(sum, 1.0));
}