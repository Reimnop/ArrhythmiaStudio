#version 440

layout(local_size_x = 8, local_size_y = 8) in;

layout(r11f_g11f_b10f, binding = 0) uniform image2D img_output;
layout(location = 0) uniform sampler2D source;
layout(location = 1) uniform sampler2D bloom;

layout(location = 2) uniform float intensity;

void main() {
	ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);
	ivec2 size = imageSize(img_output);
	
	vec2 texelSize = 1.0 / vec2(size);
	vec2 coords = pixelCoords / vec2(size) + texelSize * 0.5;

	vec4 d = texelSize.xyxy * vec4(1.0, 1.0, -1.0, 0.0);

    vec3 s;
    s  = texture(source, coords - d.xy).rgb;
    s += texture(source, coords - d.wy).rgb * 2.0;
    s += texture(source, coords - d.zy).rgb;
    s += texture(source, coords + d.zw).rgb * 2.0;
    s += texture(source, coords       ).rgb * 4.0;
    s += texture(source, coords + d.xw).rgb * 2.0;
    s += texture(source, coords + d.zy).rgb;
    s += texture(source, coords + d.wy).rgb * 2.0;
    s += texture(source, coords + d.xy).rgb;
    s *= (1.0 / 16.0);

    s *= intensity;

    s += texture(bloom, coords).rgb;

	imageStore(img_output, pixelCoords, vec4(s, 1.0));
}